def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutter_architecture_demo"
        // Required by the Flutter WebView plugin
        minSdkVersion 19
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    // 后面增加的
    signingConfigs {
        release {
        //    keyAlias "key0"
        //    keyPassword "1qaz2wsx3edc"
        //    storeFile file("../../back/vps_store.jks")
        //    storePassword "1qaz2wsx3edc"
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            signingConfig signingConfigs.release
        }
        debug{
            signingConfig signingConfigs.debug
        }
    }
    
    // flavorDimensions "env"
    // productFlavors {
    //     // 有保留关键字 不能和上面的 buildTypes 的类型相同
    //     prod{
    //         applicationIdSuffix ".release"
    //         signingConfig signingConfigs.release
    //     }
    //     dev{
    //         applicationIdSuffix ".dev"
    //         signingConfig signingConfigs.debug
    //     }
    //     xyz{
    //         applicationIdSuffix ".xyz"
    //         signingConfig signingConfigs.release
    //     }

    // }

    
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
